/*
Nordigen Account Information Services API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0 (v2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nordigen

import (
	"encoding/json"
)

// AccountTransactionResponse struct for AccountTransactionResponse
type AccountTransactionResponse struct {
	Transactions *AccountTransactionResponseTransactions `json:"transactions,omitempty"`
}

// NewAccountTransactionResponse instantiates a new AccountTransactionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountTransactionResponse() *AccountTransactionResponse {
	this := AccountTransactionResponse{}
	return &this
}

// NewAccountTransactionResponseWithDefaults instantiates a new AccountTransactionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountTransactionResponseWithDefaults() *AccountTransactionResponse {
	this := AccountTransactionResponse{}
	return &this
}

// GetTransactions returns the Transactions field value if set, zero value otherwise.
func (o *AccountTransactionResponse) GetTransactions() AccountTransactionResponseTransactions {
	if o == nil || o.Transactions == nil {
		var ret AccountTransactionResponseTransactions
		return ret
	}
	return *o.Transactions
}

// GetTransactionsOk returns a tuple with the Transactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountTransactionResponse) GetTransactionsOk() (*AccountTransactionResponseTransactions, bool) {
	if o == nil || o.Transactions == nil {
		return nil, false
	}
	return o.Transactions, true
}

// HasTransactions returns a boolean if a field has been set.
func (o *AccountTransactionResponse) HasTransactions() bool {
	if o != nil && o.Transactions != nil {
		return true
	}

	return false
}

// SetTransactions gets a reference to the given AccountTransactionResponseTransactions and assigns it to the Transactions field.
func (o *AccountTransactionResponse) SetTransactions(v AccountTransactionResponseTransactions) {
	o.Transactions = &v
}

func (o AccountTransactionResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Transactions != nil {
		toSerialize["transactions"] = o.Transactions
	}
	return json.Marshal(toSerialize)
}

type NullableAccountTransactionResponse struct {
	value *AccountTransactionResponse
	isSet bool
}

func (v NullableAccountTransactionResponse) Get() *AccountTransactionResponse {
	return v.value
}

func (v *NullableAccountTransactionResponse) Set(val *AccountTransactionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountTransactionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountTransactionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountTransactionResponse(val *AccountTransactionResponse) *NullableAccountTransactionResponse {
	return &NullableAccountTransactionResponse{value: val, isSet: true}
}

func (v NullableAccountTransactionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountTransactionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


