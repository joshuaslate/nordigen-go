/*
Nordigen Account Information Services API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0 (v2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nordigen

import (
	"encoding/json"
)

// Aspsp Represents an ASPSP.
type Aspsp struct {
	Id string `json:"id"`
	Name string `json:"name"`
	Bic *string `json:"bic,omitempty"`
	TransactionTotalDays *string `json:"transaction_total_days,omitempty"`
	Countries []string `json:"countries"`
	Logo string `json:"logo"`
}

// NewAspsp instantiates a new Aspsp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAspsp(id string, name string, countries []string, logo string) *Aspsp {
	this := Aspsp{}
	this.Id = id
	this.Name = name
	var transactionTotalDays string = "90"
	this.TransactionTotalDays = &transactionTotalDays
	this.Countries = countries
	this.Logo = logo
	return &this
}

// NewAspspWithDefaults instantiates a new Aspsp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAspspWithDefaults() *Aspsp {
	this := Aspsp{}
	var transactionTotalDays string = "90"
	this.TransactionTotalDays = &transactionTotalDays
	return &this
}

// GetId returns the Id field value
func (o *Aspsp) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Aspsp) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Aspsp) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *Aspsp) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Aspsp) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Aspsp) SetName(v string) {
	o.Name = v
}

// GetBic returns the Bic field value if set, zero value otherwise.
func (o *Aspsp) GetBic() string {
	if o == nil || o.Bic == nil {
		var ret string
		return ret
	}
	return *o.Bic
}

// GetBicOk returns a tuple with the Bic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Aspsp) GetBicOk() (*string, bool) {
	if o == nil || o.Bic == nil {
		return nil, false
	}
	return o.Bic, true
}

// HasBic returns a boolean if a field has been set.
func (o *Aspsp) HasBic() bool {
	if o != nil && o.Bic != nil {
		return true
	}

	return false
}

// SetBic gets a reference to the given string and assigns it to the Bic field.
func (o *Aspsp) SetBic(v string) {
	o.Bic = &v
}

// GetTransactionTotalDays returns the TransactionTotalDays field value if set, zero value otherwise.
func (o *Aspsp) GetTransactionTotalDays() string {
	if o == nil || o.TransactionTotalDays == nil {
		var ret string
		return ret
	}
	return *o.TransactionTotalDays
}

// GetTransactionTotalDaysOk returns a tuple with the TransactionTotalDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Aspsp) GetTransactionTotalDaysOk() (*string, bool) {
	if o == nil || o.TransactionTotalDays == nil {
		return nil, false
	}
	return o.TransactionTotalDays, true
}

// HasTransactionTotalDays returns a boolean if a field has been set.
func (o *Aspsp) HasTransactionTotalDays() bool {
	if o != nil && o.TransactionTotalDays != nil {
		return true
	}

	return false
}

// SetTransactionTotalDays gets a reference to the given string and assigns it to the TransactionTotalDays field.
func (o *Aspsp) SetTransactionTotalDays(v string) {
	o.TransactionTotalDays = &v
}

// GetCountries returns the Countries field value
func (o *Aspsp) GetCountries() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Countries
}

// GetCountriesOk returns a tuple with the Countries field value
// and a boolean to check if the value has been set.
func (o *Aspsp) GetCountriesOk() ([]string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Countries, true
}

// SetCountries sets field value
func (o *Aspsp) SetCountries(v []string) {
	o.Countries = v
}

// GetLogo returns the Logo field value
func (o *Aspsp) GetLogo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Logo
}

// GetLogoOk returns a tuple with the Logo field value
// and a boolean to check if the value has been set.
func (o *Aspsp) GetLogoOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Logo, true
}

// SetLogo sets field value
func (o *Aspsp) SetLogo(v string) {
	o.Logo = v
}

func (o Aspsp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Bic != nil {
		toSerialize["bic"] = o.Bic
	}
	if o.TransactionTotalDays != nil {
		toSerialize["transaction_total_days"] = o.TransactionTotalDays
	}
	if true {
		toSerialize["countries"] = o.Countries
	}
	if true {
		toSerialize["logo"] = o.Logo
	}
	return json.Marshal(toSerialize)
}

type NullableAspsp struct {
	value *Aspsp
	isSet bool
}

func (v NullableAspsp) Get() *Aspsp {
	return v.value
}

func (v *NullableAspsp) Set(val *Aspsp) {
	v.value = val
	v.isSet = true
}

func (v NullableAspsp) IsSet() bool {
	return v.isSet
}

func (v *NullableAspsp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAspsp(val *Aspsp) *NullableAspsp {
	return &NullableAspsp{value: val, isSet: true}
}

func (v NullableAspsp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAspsp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


