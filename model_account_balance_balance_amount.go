/*
Nordigen Account Information Services API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0 (v2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nordigen

import (
	"encoding/json"
)

// AccountBalanceBalanceAmount struct for AccountBalanceBalanceAmount
type AccountBalanceBalanceAmount struct {
	Amount *string `json:"amount,omitempty"`
	Currency *string `json:"currency,omitempty"`
}

// NewAccountBalanceBalanceAmount instantiates a new AccountBalanceBalanceAmount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountBalanceBalanceAmount() *AccountBalanceBalanceAmount {
	this := AccountBalanceBalanceAmount{}
	return &this
}

// NewAccountBalanceBalanceAmountWithDefaults instantiates a new AccountBalanceBalanceAmount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountBalanceBalanceAmountWithDefaults() *AccountBalanceBalanceAmount {
	this := AccountBalanceBalanceAmount{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *AccountBalanceBalanceAmount) GetAmount() string {
	if o == nil || o.Amount == nil {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountBalanceBalanceAmount) GetAmountOk() (*string, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *AccountBalanceBalanceAmount) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *AccountBalanceBalanceAmount) SetAmount(v string) {
	o.Amount = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *AccountBalanceBalanceAmount) GetCurrency() string {
	if o == nil || o.Currency == nil {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountBalanceBalanceAmount) GetCurrencyOk() (*string, bool) {
	if o == nil || o.Currency == nil {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *AccountBalanceBalanceAmount) HasCurrency() bool {
	if o != nil && o.Currency != nil {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *AccountBalanceBalanceAmount) SetCurrency(v string) {
	o.Currency = &v
}

func (o AccountBalanceBalanceAmount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.Currency != nil {
		toSerialize["currency"] = o.Currency
	}
	return json.Marshal(toSerialize)
}

type NullableAccountBalanceBalanceAmount struct {
	value *AccountBalanceBalanceAmount
	isSet bool
}

func (v NullableAccountBalanceBalanceAmount) Get() *AccountBalanceBalanceAmount {
	return v.value
}

func (v *NullableAccountBalanceBalanceAmount) Set(val *AccountBalanceBalanceAmount) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountBalanceBalanceAmount) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountBalanceBalanceAmount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountBalanceBalanceAmount(val *AccountBalanceBalanceAmount) *NullableAccountBalanceBalanceAmount {
	return &NullableAccountBalanceBalanceAmount{value: val, isSet: true}
}

func (v NullableAccountBalanceBalanceAmount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountBalanceBalanceAmount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


