/*
Nordigen Account Information Services API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0 (v2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nordigen

import (
	"encoding/json"
)

// EndUserAgreementRequest EndUserAgreement.
type EndUserAgreementRequest struct {
	// Maximum number of days of transaction data to retrieve.
	MaxHistoricalDays *int32 `json:"max_historical_days,omitempty"`
	// Number of days from acceptance that the access can be used.
	AccessValidForDays *int32 `json:"access_valid_for_days,omitempty"`
	// Array containing one or several values of ['balances', 'details', 'transactions']
	AccessScope []string `json:"access_scope,omitempty"`
	// an Institution ID for this EUA
	InstitutionId string `json:"institution_id"`
}

// NewEndUserAgreementRequest instantiates a new EndUserAgreementRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndUserAgreementRequest(institutionId string) *EndUserAgreementRequest {
	this := EndUserAgreementRequest{}
	var maxHistoricalDays int32 = 90
	this.MaxHistoricalDays = &maxHistoricalDays
	var accessValidForDays int32 = 90
	this.AccessValidForDays = &accessValidForDays
	this.InstitutionId = institutionId
	return &this
}

// NewEndUserAgreementRequestWithDefaults instantiates a new EndUserAgreementRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndUserAgreementRequestWithDefaults() *EndUserAgreementRequest {
	this := EndUserAgreementRequest{}
	var maxHistoricalDays int32 = 90
	this.MaxHistoricalDays = &maxHistoricalDays
	var accessValidForDays int32 = 90
	this.AccessValidForDays = &accessValidForDays
	return &this
}

// GetMaxHistoricalDays returns the MaxHistoricalDays field value if set, zero value otherwise.
func (o *EndUserAgreementRequest) GetMaxHistoricalDays() int32 {
	if o == nil || o.MaxHistoricalDays == nil {
		var ret int32
		return ret
	}
	return *o.MaxHistoricalDays
}

// GetMaxHistoricalDaysOk returns a tuple with the MaxHistoricalDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndUserAgreementRequest) GetMaxHistoricalDaysOk() (*int32, bool) {
	if o == nil || o.MaxHistoricalDays == nil {
		return nil, false
	}
	return o.MaxHistoricalDays, true
}

// HasMaxHistoricalDays returns a boolean if a field has been set.
func (o *EndUserAgreementRequest) HasMaxHistoricalDays() bool {
	if o != nil && o.MaxHistoricalDays != nil {
		return true
	}

	return false
}

// SetMaxHistoricalDays gets a reference to the given int32 and assigns it to the MaxHistoricalDays field.
func (o *EndUserAgreementRequest) SetMaxHistoricalDays(v int32) {
	o.MaxHistoricalDays = &v
}

// GetAccessValidForDays returns the AccessValidForDays field value if set, zero value otherwise.
func (o *EndUserAgreementRequest) GetAccessValidForDays() int32 {
	if o == nil || o.AccessValidForDays == nil {
		var ret int32
		return ret
	}
	return *o.AccessValidForDays
}

// GetAccessValidForDaysOk returns a tuple with the AccessValidForDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndUserAgreementRequest) GetAccessValidForDaysOk() (*int32, bool) {
	if o == nil || o.AccessValidForDays == nil {
		return nil, false
	}
	return o.AccessValidForDays, true
}

// HasAccessValidForDays returns a boolean if a field has been set.
func (o *EndUserAgreementRequest) HasAccessValidForDays() bool {
	if o != nil && o.AccessValidForDays != nil {
		return true
	}

	return false
}

// SetAccessValidForDays gets a reference to the given int32 and assigns it to the AccessValidForDays field.
func (o *EndUserAgreementRequest) SetAccessValidForDays(v int32) {
	o.AccessValidForDays = &v
}

// GetAccessScope returns the AccessScope field value if set, zero value otherwise.
func (o *EndUserAgreementRequest) GetAccessScope() []string {
	if o == nil || o.AccessScope == nil {
		var ret []string
		return ret
	}
	return o.AccessScope
}

// GetAccessScopeOk returns a tuple with the AccessScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndUserAgreementRequest) GetAccessScopeOk() ([]string, bool) {
	if o == nil || o.AccessScope == nil {
		return nil, false
	}
	return o.AccessScope, true
}

// HasAccessScope returns a boolean if a field has been set.
func (o *EndUserAgreementRequest) HasAccessScope() bool {
	if o != nil && o.AccessScope != nil {
		return true
	}

	return false
}

// SetAccessScope gets a reference to the given []string and assigns it to the AccessScope field.
func (o *EndUserAgreementRequest) SetAccessScope(v []string) {
	o.AccessScope = v
}

// GetInstitutionId returns the InstitutionId field value
func (o *EndUserAgreementRequest) GetInstitutionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstitutionId
}

// GetInstitutionIdOk returns a tuple with the InstitutionId field value
// and a boolean to check if the value has been set.
func (o *EndUserAgreementRequest) GetInstitutionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InstitutionId, true
}

// SetInstitutionId sets field value
func (o *EndUserAgreementRequest) SetInstitutionId(v string) {
	o.InstitutionId = v
}

func (o EndUserAgreementRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MaxHistoricalDays != nil {
		toSerialize["max_historical_days"] = o.MaxHistoricalDays
	}
	if o.AccessValidForDays != nil {
		toSerialize["access_valid_for_days"] = o.AccessValidForDays
	}
	if o.AccessScope != nil {
		toSerialize["access_scope"] = o.AccessScope
	}
	if true {
		toSerialize["institution_id"] = o.InstitutionId
	}
	return json.Marshal(toSerialize)
}

type NullableEndUserAgreementRequest struct {
	value *EndUserAgreementRequest
	isSet bool
}

func (v NullableEndUserAgreementRequest) Get() *EndUserAgreementRequest {
	return v.value
}

func (v *NullableEndUserAgreementRequest) Set(val *EndUserAgreementRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEndUserAgreementRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEndUserAgreementRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndUserAgreementRequest(val *EndUserAgreementRequest) *NullableEndUserAgreementRequest {
	return &NullableEndUserAgreementRequest{value: val, isSet: true}
}

func (v NullableEndUserAgreementRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndUserAgreementRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


