/*
Nordigen Account Information Services API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0 (v2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nordigen

import (
	"encoding/json"
	"time"
)

// AccountV2 AccountV2Serializer.
type AccountV2 struct {
	// The ID of this Account, used to refer to this account in other API calls.
	Id *string `json:"id,omitempty"`
	// The date & time at which the account object was created.
	Created *time.Time `json:"created,omitempty"`
	// The date & time at which the account object was last accessed.
	LastAccessed NullableTime `json:"last_accessed,omitempty"`
	// The Account IBAN
	Iban *string `json:"iban,omitempty"`
	// This data element is used for payment accounts which have no IBAN
	Bban *string `json:"bban,omitempty"`
	// The ASPSP associated with this account.
	InstitutionId *string `json:"institution_id,omitempty"`
	Status NullableAccountV2StatusEnum `json:"status,omitempty"`
}

// NewAccountV2 instantiates a new AccountV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountV2() *AccountV2 {
	this := AccountV2{}
	return &this
}

// NewAccountV2WithDefaults instantiates a new AccountV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountV2WithDefaults() *AccountV2 {
	this := AccountV2{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AccountV2) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountV2) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AccountV2) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AccountV2) SetId(v string) {
	o.Id = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *AccountV2) GetCreated() time.Time {
	if o == nil || o.Created == nil {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountV2) GetCreatedOk() (*time.Time, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *AccountV2) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *AccountV2) SetCreated(v time.Time) {
	o.Created = &v
}

// GetLastAccessed returns the LastAccessed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountV2) GetLastAccessed() time.Time {
	if o == nil || o.LastAccessed.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.LastAccessed.Get()
}

// GetLastAccessedOk returns a tuple with the LastAccessed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountV2) GetLastAccessedOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastAccessed.Get(), o.LastAccessed.IsSet()
}

// HasLastAccessed returns a boolean if a field has been set.
func (o *AccountV2) HasLastAccessed() bool {
	if o != nil && o.LastAccessed.IsSet() {
		return true
	}

	return false
}

// SetLastAccessed gets a reference to the given NullableTime and assigns it to the LastAccessed field.
func (o *AccountV2) SetLastAccessed(v time.Time) {
	o.LastAccessed.Set(&v)
}
// SetLastAccessedNil sets the value for LastAccessed to be an explicit nil
func (o *AccountV2) SetLastAccessedNil() {
	o.LastAccessed.Set(nil)
}

// UnsetLastAccessed ensures that no value is present for LastAccessed, not even an explicit nil
func (o *AccountV2) UnsetLastAccessed() {
	o.LastAccessed.Unset()
}

// GetIban returns the Iban field value if set, zero value otherwise.
func (o *AccountV2) GetIban() string {
	if o == nil || o.Iban == nil {
		var ret string
		return ret
	}
	return *o.Iban
}

// GetIbanOk returns a tuple with the Iban field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountV2) GetIbanOk() (*string, bool) {
	if o == nil || o.Iban == nil {
		return nil, false
	}
	return o.Iban, true
}

// HasIban returns a boolean if a field has been set.
func (o *AccountV2) HasIban() bool {
	if o != nil && o.Iban != nil {
		return true
	}

	return false
}

// SetIban gets a reference to the given string and assigns it to the Iban field.
func (o *AccountV2) SetIban(v string) {
	o.Iban = &v
}

// GetBban returns the Bban field value if set, zero value otherwise.
func (o *AccountV2) GetBban() string {
	if o == nil || o.Bban == nil {
		var ret string
		return ret
	}
	return *o.Bban
}

// GetBbanOk returns a tuple with the Bban field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountV2) GetBbanOk() (*string, bool) {
	if o == nil || o.Bban == nil {
		return nil, false
	}
	return o.Bban, true
}

// HasBban returns a boolean if a field has been set.
func (o *AccountV2) HasBban() bool {
	if o != nil && o.Bban != nil {
		return true
	}

	return false
}

// SetBban gets a reference to the given string and assigns it to the Bban field.
func (o *AccountV2) SetBban(v string) {
	o.Bban = &v
}

// GetInstitutionId returns the InstitutionId field value if set, zero value otherwise.
func (o *AccountV2) GetInstitutionId() string {
	if o == nil || o.InstitutionId == nil {
		var ret string
		return ret
	}
	return *o.InstitutionId
}

// GetInstitutionIdOk returns a tuple with the InstitutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountV2) GetInstitutionIdOk() (*string, bool) {
	if o == nil || o.InstitutionId == nil {
		return nil, false
	}
	return o.InstitutionId, true
}

// HasInstitutionId returns a boolean if a field has been set.
func (o *AccountV2) HasInstitutionId() bool {
	if o != nil && o.InstitutionId != nil {
		return true
	}

	return false
}

// SetInstitutionId gets a reference to the given string and assigns it to the InstitutionId field.
func (o *AccountV2) SetInstitutionId(v string) {
	o.InstitutionId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountV2) GetStatus() AccountV2StatusEnum {
	if o == nil || o.Status.Get() == nil {
		var ret AccountV2StatusEnum
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountV2) GetStatusOk() (*AccountV2StatusEnum, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *AccountV2) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableAccountV2StatusEnum and assigns it to the Status field.
func (o *AccountV2) SetStatus(v AccountV2StatusEnum) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *AccountV2) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *AccountV2) UnsetStatus() {
	o.Status.Unset()
}

func (o AccountV2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.LastAccessed.IsSet() {
		toSerialize["last_accessed"] = o.LastAccessed.Get()
	}
	if o.Iban != nil {
		toSerialize["iban"] = o.Iban
	}
	if o.Bban != nil {
		toSerialize["bban"] = o.Bban
	}
	if o.InstitutionId != nil {
		toSerialize["institution_id"] = o.InstitutionId
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAccountV2 struct {
	value *AccountV2
	isSet bool
}

func (v NullableAccountV2) Get() *AccountV2 {
	return v.value
}

func (v *NullableAccountV2) Set(val *AccountV2) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountV2) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountV2(val *AccountV2) *NullableAccountV2 {
	return &NullableAccountV2{value: val, isSet: true}
}

func (v NullableAccountV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


