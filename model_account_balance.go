/*
Nordigen Account Information Services API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0 (v2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nordigen

import (
	"encoding/json"
)

// AccountBalance Account balance details
type AccountBalance struct {
	BalanceAmount *AccountBalanceBalanceAmount `json:"balanceAmount,omitempty"`
	BalanceType *string `json:"balanceType,omitempty"`
	ReferenceDate *string `json:"referenceDate,omitempty"`
	// A flag indicating if the credit limit of the corresponding account is included in the calculation of the balance, where applicable.
	CreditLimitIncluded NullableBool `json:"creditLimitIncluded,omitempty"`
}

// NewAccountBalance instantiates a new AccountBalance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountBalance() *AccountBalance {
	this := AccountBalance{}
	return &this
}

// NewAccountBalanceWithDefaults instantiates a new AccountBalance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountBalanceWithDefaults() *AccountBalance {
	this := AccountBalance{}
	return &this
}

// GetBalanceAmount returns the BalanceAmount field value if set, zero value otherwise.
func (o *AccountBalance) GetBalanceAmount() AccountBalanceBalanceAmount {
	if o == nil || o.BalanceAmount == nil {
		var ret AccountBalanceBalanceAmount
		return ret
	}
	return *o.BalanceAmount
}

// GetBalanceAmountOk returns a tuple with the BalanceAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountBalance) GetBalanceAmountOk() (*AccountBalanceBalanceAmount, bool) {
	if o == nil || o.BalanceAmount == nil {
		return nil, false
	}
	return o.BalanceAmount, true
}

// HasBalanceAmount returns a boolean if a field has been set.
func (o *AccountBalance) HasBalanceAmount() bool {
	if o != nil && o.BalanceAmount != nil {
		return true
	}

	return false
}

// SetBalanceAmount gets a reference to the given AccountBalanceBalanceAmount and assigns it to the BalanceAmount field.
func (o *AccountBalance) SetBalanceAmount(v AccountBalanceBalanceAmount) {
	o.BalanceAmount = &v
}

// GetBalanceType returns the BalanceType field value if set, zero value otherwise.
func (o *AccountBalance) GetBalanceType() string {
	if o == nil || o.BalanceType == nil {
		var ret string
		return ret
	}
	return *o.BalanceType
}

// GetBalanceTypeOk returns a tuple with the BalanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountBalance) GetBalanceTypeOk() (*string, bool) {
	if o == nil || o.BalanceType == nil {
		return nil, false
	}
	return o.BalanceType, true
}

// HasBalanceType returns a boolean if a field has been set.
func (o *AccountBalance) HasBalanceType() bool {
	if o != nil && o.BalanceType != nil {
		return true
	}

	return false
}

// SetBalanceType gets a reference to the given string and assigns it to the BalanceType field.
func (o *AccountBalance) SetBalanceType(v string) {
	o.BalanceType = &v
}

// GetReferenceDate returns the ReferenceDate field value if set, zero value otherwise.
func (o *AccountBalance) GetReferenceDate() string {
	if o == nil || o.ReferenceDate == nil {
		var ret string
		return ret
	}
	return *o.ReferenceDate
}

// GetReferenceDateOk returns a tuple with the ReferenceDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountBalance) GetReferenceDateOk() (*string, bool) {
	if o == nil || o.ReferenceDate == nil {
		return nil, false
	}
	return o.ReferenceDate, true
}

// HasReferenceDate returns a boolean if a field has been set.
func (o *AccountBalance) HasReferenceDate() bool {
	if o != nil && o.ReferenceDate != nil {
		return true
	}

	return false
}

// SetReferenceDate gets a reference to the given string and assigns it to the ReferenceDate field.
func (o *AccountBalance) SetReferenceDate(v string) {
	o.ReferenceDate = &v
}

// GetCreditLimitIncluded returns the CreditLimitIncluded field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountBalance) GetCreditLimitIncluded() bool {
	if o == nil || o.CreditLimitIncluded.Get() == nil {
		var ret bool
		return ret
	}
	return *o.CreditLimitIncluded.Get()
}

// GetCreditLimitIncludedOk returns a tuple with the CreditLimitIncluded field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountBalance) GetCreditLimitIncludedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreditLimitIncluded.Get(), o.CreditLimitIncluded.IsSet()
}

// HasCreditLimitIncluded returns a boolean if a field has been set.
func (o *AccountBalance) HasCreditLimitIncluded() bool {
	if o != nil && o.CreditLimitIncluded.IsSet() {
		return true
	}

	return false
}

// SetCreditLimitIncluded gets a reference to the given NullableBool and assigns it to the CreditLimitIncluded field.
func (o *AccountBalance) SetCreditLimitIncluded(v bool) {
	o.CreditLimitIncluded.Set(&v)
}
// SetCreditLimitIncludedNil sets the value for CreditLimitIncluded to be an explicit nil
func (o *AccountBalance) SetCreditLimitIncludedNil() {
	o.CreditLimitIncluded.Set(nil)
}

// UnsetCreditLimitIncluded ensures that no value is present for CreditLimitIncluded, not even an explicit nil
func (o *AccountBalance) UnsetCreditLimitIncluded() {
	o.CreditLimitIncluded.Unset()
}

func (o AccountBalance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BalanceAmount != nil {
		toSerialize["balanceAmount"] = o.BalanceAmount
	}
	if o.BalanceType != nil {
		toSerialize["balanceType"] = o.BalanceType
	}
	if o.ReferenceDate != nil {
		toSerialize["referenceDate"] = o.ReferenceDate
	}
	if o.CreditLimitIncluded.IsSet() {
		toSerialize["creditLimitIncluded"] = o.CreditLimitIncluded.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAccountBalance struct {
	value *AccountBalance
	isSet bool
}

func (v NullableAccountBalance) Get() *AccountBalance {
	return v.value
}

func (v *NullableAccountBalance) Set(val *AccountBalance) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountBalance) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountBalance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountBalance(val *AccountBalance) *NullableAccountBalance {
	return &NullableAccountBalance{value: val, isSet: true}
}

func (v NullableAccountBalance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountBalance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


