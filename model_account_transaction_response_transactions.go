/*
Nordigen Account Information Services API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0 (v2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nordigen

import (
	"encoding/json"
)

// AccountTransactionResponseTransactions struct for AccountTransactionResponseTransactions
type AccountTransactionResponseTransactions struct {
	Booked []AccountTransaction `json:"booked,omitempty"`
	Pending []AccountTransaction `json:"pending,omitempty"`
}

// NewAccountTransactionResponseTransactions instantiates a new AccountTransactionResponseTransactions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountTransactionResponseTransactions() *AccountTransactionResponseTransactions {
	this := AccountTransactionResponseTransactions{}
	return &this
}

// NewAccountTransactionResponseTransactionsWithDefaults instantiates a new AccountTransactionResponseTransactions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountTransactionResponseTransactionsWithDefaults() *AccountTransactionResponseTransactions {
	this := AccountTransactionResponseTransactions{}
	return &this
}

// GetBooked returns the Booked field value if set, zero value otherwise.
func (o *AccountTransactionResponseTransactions) GetBooked() []AccountTransaction {
	if o == nil || o.Booked == nil {
		var ret []AccountTransaction
		return ret
	}
	return o.Booked
}

// GetBookedOk returns a tuple with the Booked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountTransactionResponseTransactions) GetBookedOk() ([]AccountTransaction, bool) {
	if o == nil || o.Booked == nil {
		return nil, false
	}
	return o.Booked, true
}

// HasBooked returns a boolean if a field has been set.
func (o *AccountTransactionResponseTransactions) HasBooked() bool {
	if o != nil && o.Booked != nil {
		return true
	}

	return false
}

// SetBooked gets a reference to the given []AccountTransaction and assigns it to the Booked field.
func (o *AccountTransactionResponseTransactions) SetBooked(v []AccountTransaction) {
	o.Booked = v
}

// GetPending returns the Pending field value if set, zero value otherwise.
func (o *AccountTransactionResponseTransactions) GetPending() []AccountTransaction {
	if o == nil || o.Pending == nil {
		var ret []AccountTransaction
		return ret
	}
	return o.Pending
}

// GetPendingOk returns a tuple with the Pending field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountTransactionResponseTransactions) GetPendingOk() ([]AccountTransaction, bool) {
	if o == nil || o.Pending == nil {
		return nil, false
	}
	return o.Pending, true
}

// HasPending returns a boolean if a field has been set.
func (o *AccountTransactionResponseTransactions) HasPending() bool {
	if o != nil && o.Pending != nil {
		return true
	}

	return false
}

// SetPending gets a reference to the given []AccountTransaction and assigns it to the Pending field.
func (o *AccountTransactionResponseTransactions) SetPending(v []AccountTransaction) {
	o.Pending = v
}

func (o AccountTransactionResponseTransactions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Booked != nil {
		toSerialize["booked"] = o.Booked
	}
	if o.Pending != nil {
		toSerialize["pending"] = o.Pending
	}
	return json.Marshal(toSerialize)
}

type NullableAccountTransactionResponseTransactions struct {
	value *AccountTransactionResponseTransactions
	isSet bool
}

func (v NullableAccountTransactionResponseTransactions) Get() *AccountTransactionResponseTransactions {
	return v.value
}

func (v *NullableAccountTransactionResponseTransactions) Set(val *AccountTransactionResponseTransactions) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountTransactionResponseTransactions) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountTransactionResponseTransactions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountTransactionResponseTransactions(val *AccountTransactionResponseTransactions) *NullableAccountTransactionResponseTransactions {
	return &NullableAccountTransactionResponseTransactions{value: val, isSet: true}
}

func (v NullableAccountTransactionResponseTransactions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountTransactionResponseTransactions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


