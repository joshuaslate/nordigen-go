/*
Nordigen Account Information Services API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0 (v2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nordigen

import (
	"encoding/json"
)

// AccountBalancesResponse struct for AccountBalancesResponse
type AccountBalancesResponse struct {
	// Account balances
	Balances []AccountBalance `json:"balances,omitempty"`
}

// NewAccountBalancesResponse instantiates a new AccountBalancesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountBalancesResponse() *AccountBalancesResponse {
	this := AccountBalancesResponse{}
	return &this
}

// NewAccountBalancesResponseWithDefaults instantiates a new AccountBalancesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountBalancesResponseWithDefaults() *AccountBalancesResponse {
	this := AccountBalancesResponse{}
	return &this
}

// GetBalances returns the Balances field value if set, zero value otherwise.
func (o *AccountBalancesResponse) GetBalances() []AccountBalance {
	if o == nil || o.Balances == nil {
		var ret []AccountBalance
		return ret
	}
	return o.Balances
}

// GetBalancesOk returns a tuple with the Balances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountBalancesResponse) GetBalancesOk() ([]AccountBalance, bool) {
	if o == nil || o.Balances == nil {
		return nil, false
	}
	return o.Balances, true
}

// HasBalances returns a boolean if a field has been set.
func (o *AccountBalancesResponse) HasBalances() bool {
	if o != nil && o.Balances != nil {
		return true
	}

	return false
}

// SetBalances gets a reference to the given []AccountBalance and assigns it to the Balances field.
func (o *AccountBalancesResponse) SetBalances(v []AccountBalance) {
	o.Balances = v
}

func (o AccountBalancesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Balances != nil {
		toSerialize["balances"] = o.Balances
	}
	return json.Marshal(toSerialize)
}

type NullableAccountBalancesResponse struct {
	value *AccountBalancesResponse
	isSet bool
}

func (v NullableAccountBalancesResponse) Get() *AccountBalancesResponse {
	return v.value
}

func (v *NullableAccountBalancesResponse) Set(val *AccountBalancesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountBalancesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountBalancesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountBalancesResponse(val *AccountBalancesResponse) *NullableAccountBalancesResponse {
	return &NullableAccountBalancesResponse{value: val, isSet: true}
}

func (v NullableAccountBalancesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountBalancesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


