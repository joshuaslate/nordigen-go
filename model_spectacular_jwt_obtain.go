/*
Nordigen Account Information Services API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0 (v2)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nordigen

import (
	"encoding/json"
)

// SpectacularJWTObtain Obtain new JWT pair.
type SpectacularJWTObtain struct {
	// Your access token
	Access *string `json:"access,omitempty"`
	// Access token expires in seconds
	AccessExpires *int32 `json:"access_expires,omitempty"`
	// Your refresh token
	Refresh *string `json:"refresh,omitempty"`
	// Refresh token expires in seconds
	RefreshExpires *int32 `json:"refresh_expires,omitempty"`
}

// NewSpectacularJWTObtain instantiates a new SpectacularJWTObtain object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpectacularJWTObtain() *SpectacularJWTObtain {
	this := SpectacularJWTObtain{}
	return &this
}

// NewSpectacularJWTObtainWithDefaults instantiates a new SpectacularJWTObtain object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpectacularJWTObtainWithDefaults() *SpectacularJWTObtain {
	this := SpectacularJWTObtain{}
	return &this
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *SpectacularJWTObtain) GetAccess() string {
	if o == nil || o.Access == nil {
		var ret string
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpectacularJWTObtain) GetAccessOk() (*string, bool) {
	if o == nil || o.Access == nil {
		return nil, false
	}
	return o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *SpectacularJWTObtain) HasAccess() bool {
	if o != nil && o.Access != nil {
		return true
	}

	return false
}

// SetAccess gets a reference to the given string and assigns it to the Access field.
func (o *SpectacularJWTObtain) SetAccess(v string) {
	o.Access = &v
}

// GetAccessExpires returns the AccessExpires field value if set, zero value otherwise.
func (o *SpectacularJWTObtain) GetAccessExpires() int32 {
	if o == nil || o.AccessExpires == nil {
		var ret int32
		return ret
	}
	return *o.AccessExpires
}

// GetAccessExpiresOk returns a tuple with the AccessExpires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpectacularJWTObtain) GetAccessExpiresOk() (*int32, bool) {
	if o == nil || o.AccessExpires == nil {
		return nil, false
	}
	return o.AccessExpires, true
}

// HasAccessExpires returns a boolean if a field has been set.
func (o *SpectacularJWTObtain) HasAccessExpires() bool {
	if o != nil && o.AccessExpires != nil {
		return true
	}

	return false
}

// SetAccessExpires gets a reference to the given int32 and assigns it to the AccessExpires field.
func (o *SpectacularJWTObtain) SetAccessExpires(v int32) {
	o.AccessExpires = &v
}

// GetRefresh returns the Refresh field value if set, zero value otherwise.
func (o *SpectacularJWTObtain) GetRefresh() string {
	if o == nil || o.Refresh == nil {
		var ret string
		return ret
	}
	return *o.Refresh
}

// GetRefreshOk returns a tuple with the Refresh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpectacularJWTObtain) GetRefreshOk() (*string, bool) {
	if o == nil || o.Refresh == nil {
		return nil, false
	}
	return o.Refresh, true
}

// HasRefresh returns a boolean if a field has been set.
func (o *SpectacularJWTObtain) HasRefresh() bool {
	if o != nil && o.Refresh != nil {
		return true
	}

	return false
}

// SetRefresh gets a reference to the given string and assigns it to the Refresh field.
func (o *SpectacularJWTObtain) SetRefresh(v string) {
	o.Refresh = &v
}

// GetRefreshExpires returns the RefreshExpires field value if set, zero value otherwise.
func (o *SpectacularJWTObtain) GetRefreshExpires() int32 {
	if o == nil || o.RefreshExpires == nil {
		var ret int32
		return ret
	}
	return *o.RefreshExpires
}

// GetRefreshExpiresOk returns a tuple with the RefreshExpires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpectacularJWTObtain) GetRefreshExpiresOk() (*int32, bool) {
	if o == nil || o.RefreshExpires == nil {
		return nil, false
	}
	return o.RefreshExpires, true
}

// HasRefreshExpires returns a boolean if a field has been set.
func (o *SpectacularJWTObtain) HasRefreshExpires() bool {
	if o != nil && o.RefreshExpires != nil {
		return true
	}

	return false
}

// SetRefreshExpires gets a reference to the given int32 and assigns it to the RefreshExpires field.
func (o *SpectacularJWTObtain) SetRefreshExpires(v int32) {
	o.RefreshExpires = &v
}

func (o SpectacularJWTObtain) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Access != nil {
		toSerialize["access"] = o.Access
	}
	if o.AccessExpires != nil {
		toSerialize["access_expires"] = o.AccessExpires
	}
	if o.Refresh != nil {
		toSerialize["refresh"] = o.Refresh
	}
	if o.RefreshExpires != nil {
		toSerialize["refresh_expires"] = o.RefreshExpires
	}
	return json.Marshal(toSerialize)
}

type NullableSpectacularJWTObtain struct {
	value *SpectacularJWTObtain
	isSet bool
}

func (v NullableSpectacularJWTObtain) Get() *SpectacularJWTObtain {
	return v.value
}

func (v *NullableSpectacularJWTObtain) Set(val *SpectacularJWTObtain) {
	v.value = val
	v.isSet = true
}

func (v NullableSpectacularJWTObtain) IsSet() bool {
	return v.isSet
}

func (v *NullableSpectacularJWTObtain) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpectacularJWTObtain(val *SpectacularJWTObtain) *NullableSpectacularJWTObtain {
	return &NullableSpectacularJWTObtain{value: val, isSet: true}
}

func (v NullableSpectacularJWTObtain) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpectacularJWTObtain) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


